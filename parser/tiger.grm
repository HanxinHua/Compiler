%%
%term
    EOF
  | ID of string
  | INT of int | STRING of string
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK
  | LBRACE | RBRACE | DOT
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF
  | BREAK | NIL
  | FUNCTION | VAR | TYPE

%nonterm  exp | program | lvalue | expseq | explist | field | type-declaration
| type | type-field | type-fields

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE
	DO OF NIL

%prefer THEN ELSE LPAREN

% left AND OR
% nonassoc EQ NEQ LT LE GT GE
% left PLUS MINUS
% left DIVIDE TIMES
% left UMINUS grouping

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%change

%%

program	: exp				()


exp: STRING                             ()
	|  INT                                ()
	|  NIL                                ()
	|  lvalue                             ()
	|  MINUS exp  %prec UMINUS            ()
  |  exp PLUS exp                       ()
  |  exp MINUS exp                      ()
  |  exp TIMES exp                      ()
  |  exp DIVIDE exp                     ()
  |  exp AND exp                        ()
  |  exp OR exp                         ()
	|  lvalue ASSIGN exp                  ()
	|  ID LPAREN explist RPAREN           ()
	|  LPAREN expseq RPAREN               ()
	|  ID LBRACE field RBRACE             ()
	|  ID LBRACK exp RBRACK OF exp        ()
	|  IF exp THEN exp                    ()
	|  IF exp THEN exp ELSE exp           ()
	|  WHILE exp DO exp                   ()
	|  FOR ID ASSIGN exp TO exp DO exp    ()
	|  BREAK                              ()
	|  LET declaration-list IN expseq END ()

lvalue: ID                     ()
	   |lvalue DOT ID            ()
	   |lvalue LBRACK exp RBRACK ()

expseq: exp                  ()
	    | expseq SEMICOLON exp ()

explist: exp               ()
		   | explist COMMA exp ()

field: ID EQ exp             ()
	   | field COMMA ID EQ exp ()

type-declaration: TYPE ID EQ type ()

type: ID                        ()
    | LBRACE type-fields RBRACE ()
    | LBRACE RBRACE             ()
    | ARRAY OF ID               ()

type-fields: type-field                   ()
           | type-fields COMMA type-field ()

type-field: ID COLON ID ()
