%%
%term
    EOF
  | ID of string
  | INT of int | STRING of string
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK
  | LBRACE | RBRACE | DOT
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF
  | BREAK | NIL
  | FUNCTION | VAR | TYPE

%nonterm  exp | program

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE
	DO OF NIL

%prefer THEN ELSE LPAREN

% nonassoc EQ NEQ LT LE GT GE
% left AND OR
% left PLUS MINUS
% left DIVIDE TIMES
% left UMINUS grouping

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%change

%%

program	: exp				()


exp:  INT            ()
   |  STRING         ()
   |  NIL            ()
   |  FUNCTION       ()
   |  lvalue         ()
   |  exp PLUS exp   ()
   |  exp MINUS exp  ()
   |  exp TIMES exp  ()
   |  exp DIVIDE exp ()
   |  MINUS exp  %prec UMINUS ()
   |  grouping       ()
   |  exp AND exp    ()
   |  exp OR  exp    ()
   |  IF exp THEN exp()
   |  FOR exp TO exp DO loop_action ()
   |  WHILE exp DO loop_action()
   | (*empty*)

lvalue: ID
      | lvalue DOT ID
      | lvalue LBRACK exp RBRACKx

grouping: LPAREN exp RPAREN    ()
        | LPAREN exp SEMICOLON ()
        | exp SEMICOLON        ()
        | exp RPAREN           ()

loop_action: exp
           | BREAK
